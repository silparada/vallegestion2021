
unit ciudades_fm;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  System.IOUtils,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, FireDAC.Stan.Intf, FireDAC.Stan.Option,
  Datasnap.Provider, Vcl.Imaging.jpeg, System.ImageList, Vcl.ImgList,
  Vcl.WinXCtrls, Vcl.WinXPickers, Vcl.ToolWin, Vcl.StdCtrls, Vcl.Buttons,
  Vcl.ExtCtrls, Vcl.ComCtrls, Data.DB, Data.Win.ADODB, frxClass, frxDBSet,
  FireDAC.Stan.Param, FireDAC.Stan.Error, FireDAC.DatS, FireDAC.Phys.Intf,
  FireDAC.DApt.Intf, FireDAC.Stan.Async, FireDAC.DApt, FireDAC.Comp.DataSet,
  FireDAC.Comp.Client;


type
  TFmCiudades = class(TForm)
    ToolBar1: TToolBar;
    TB_readdb: TToolButton;
    TB_add: TToolButton;
    TB_edit: TToolButton;
    TB_Delete: TToolButton;
    ListView1: TListView;
    Panel2: TPanel;
    Ed_busqueda: TEdit;
    Pn_EditAdd: TPanel;
    Ed_Codigo: TEdit;
    Label1: TLabel;
    Label2: TLabel;
    Ed_Nombre: TEdit;
    Label3: TLabel;
    Bc_Aceptar: TBitBtn;
    BC_Cancelar: TBitBtn;
    StatusBar1: TStatusBar;
    TB_Print: TToolButton;
    Pn_Imprimir: TPanel;
    frxReport1: TfrxReport;
    BC_AceptarPrint: TBitBtn;
    BC_CancelarPrint: TBitBtn;
    CV_PrintSoloActivos: TCheckBox;
    frxDBDataset1: TfrxDBDataset;
    Ed_Provincia: TEdit;
    FDQuery1: TFDQuery;
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure TB_DeleteClick(Sender: TObject);
    procedure TB_readdbClick(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure ListView1Data(Sender: TObject; Item: TListItem);
    procedure Ed_busquedaChange(Sender: TObject);
    procedure FormDestroy(Sender: TObject);
    procedure d3_ListViewCustomDrawItem(Sender: TCustomListView;
      Item: TListItem; State: TCustomDrawState; var DefaultDraw: Boolean);
    procedure Bc_AceptarClick(Sender: TObject);
    procedure TB_editClick(Sender: TObject);
    procedure BC_CancelarClick(Sender: TObject);
    procedure TB_addClick(Sender: TObject);
    procedure BC_AceptarPrintClick(Sender: TObject);
    procedure BC_CancelarPrintClick(Sender: TObject);
    procedure TB_PrintClick(Sender: TObject);
    procedure ListView1DblClick(Sender: TObject);
  private
    { Private declarations }
    procedure ApplyFilter(const S: string);
    procedure Bloqueo;
    procedure DesBloqueo;
  public
    { Public declarations }
  end;

var
  FmCiudades: TFmCiudades;

implementation
{$R *.dfm}

uses
 //class
  ciudades,UtilsFunc, main, rp_utils  ,ajustes  ,importsdll
;

var
 // BusqIndiceDesde : integer;
  ListaActiva : TStringList;
  ListaCompleta : TStringList;
  bm: TBitmap;
  pn: TPanel;
  img: TImage;
  Editar : Boolean;

procedure TFmCiudades.Bloqueo;
begin
  //FmClientes
  BorderStyle := bsSingle;
  bm := GetFormImage;
  FadeBitmap(bm);
  pn := TPanel.Create(nil);
  img := TImage.Create(nil);
  img.Parent := pn;
     pn.BoundsRect := ClientRect;
     pn.BevelOuter := bvNone;
     img.Align := alClient;
     img.Picture.Bitmap.Assign(bm);
     pn.Parent := Self;
end;
procedure TFmCiudades.DesBloqueo;
begin
  img.Free;
  pn.Free;
  bm.Free;
  BorderStyle := bsSizeable;
end;

procedure TFmCiudades.ApplyFilter(const S: string);
var
  I: Integer;
begin
  ListView1.Items.BeginUpdate;
  try
    ListView1.Clear;
    ListaActiva.Clear;
    //SHOWMESSAGE('OKA');
    for I := 0 to ListaCompleta.Count - 1 do
      if (S = '') or (Pos(UpperCase(S), UpperCase(ListaCompleta[i]) )  <> 0 ) then
        ListaActiva.AddObject(ListaCompleta[I], ListaCompleta.Objects[i] );
    ListView1.Items.Count := ListaActiva.Count;
  finally
    ListView1.Items.EndUpdate;
  end;
  StatusBar1.Panels[0].Text :=  'Registros: '+IntToStr(ListView1.Items.Count);
end;


procedure TFmCiudades.Bc_AceptarClick(Sender: TObject);
var
 Ciudad : TCiudad;
begin
  Ciudad := TCiudad.create ;

  Ciudad.codPostal := Ed_Codigo.Text;
  Ciudad.nombre := Ed_Nombre.Text;
  Ciudad.provincia := Ed_Provincia.Text;

  if EDITAR then
    CiudadesEditar(Ciudad)
  else
     CiudadesAgregar(Ciudad);


 Ciudad.free;

 screen.Cursor := crDefault;
 Desbloqueo;
 Pn_EditAdd.Visible := false;
end;

procedure TFmCiudades.BC_CancelarClick(Sender: TObject);
begin
 desbloqueo;
 Pn_EditAdd.Visible := false;
end;

procedure TFmCiudades.BC_CancelarPrintClick(Sender: TObject);
begin
 desbloqueo;
 Pn_Imprimir.Visible := false;
end;

procedure TFmCiudades.BC_AceptarPrintClick(Sender: TObject);
begin

  FDQuery1.close;
  FDQuery1.sql.clear;
  FDQuery1.Sql.add('SELECT * FROM Ciudades order by provincia,nombre');
  if CV_PrintSoloActivos.Checked then
     FDQuery1.sql.add(' WHERE activo=1');

  FDQuery1.sql.add( ' ORDER BY descripcion');
  frxReport1.LoadFromFile( Ajuste.CarpReportes+'\reports\ciudades.fr3')   ;

  FDQuery1.open;
  SetUpReporte(frxReport1,'Ciudades');
 // TfrxGroupHeader(frxReport1.FindObject('GroupHeader1')).StartNewPage := CV_PrintPagJuntos.Checked ;
  frxReport1.ShowReport;

  Desbloqueo;
  Pn_imprimir.Visible := false;
end;

procedure TFmCiudades.d3_ListViewCustomDrawItem(Sender: TCustomListView;
  Item: TListItem; State: TCustomDrawState; var DefaultDraw: Boolean);
begin
  if Odd(Item.Index) then
    // odd list items have green background
    Sender.Canvas.Brush.Color := clsilver
  else
    // even list items have window colour background
    Sender.Canvas.Brush.Color := clWindow;
  DefaultDraw := true;
end;

procedure TFmCiudades.Ed_busquedaChange(Sender: TObject);
begin
  ApplyFilter((Sender as TEdit).Text);
end;

procedure TFmCiudades.FormClose(Sender: TObject; var Action: TCloseAction);
begin
  action := cafree;
end;

procedure TFmCiudades.FormCreate(Sender: TObject);
begin

 ListaCompleta := TStringList.create;
 ListaActiva := TStringList.Create;


 TB_readdb.Click;
end;


procedure TFmCiudades.FormDestroy(Sender: TObject);
begin
  ListaCompleta.Free;
  ListaActiva.Free;
end;



procedure TFmCiudades.ListView1Data(Sender: TObject; Item: TListItem);
begin
  with Item do
   begin
   Caption :=  TCiudad(ListaActiva.objects[Item.Index]).CodPostal;
   SubItems.Add( TCiudad(ListaActiva.objects[Item.Index]).nombre );
   SubItems.Add( TCiudad(ListaActiva.objects[Item.Index]).provincia);
   end;
end;

procedure TFmCiudades.ListView1DblClick(Sender: TObject);
begin
  TB_editClick(Sender);
end;

procedure TFmCiudades.TB_readdbClick(Sender: TObject);
begin
 ListaCompleta.Clear;
 CiudadesLeerListado(ListaCompleta);

 Ed_busqueda.Text := '';
 ApplyFilter(Ed_busqueda.Text);
 ListView1.ItemIndex := 0;

end;

procedure TFmCiudades.TB_PrintClick(Sender: TObject);
begin
   Bloqueo;
   Pn_Imprimir.Visible := true;
   Pn_Imprimir.BringToFront;
end;

procedure TFmCiudades.TB_addClick(Sender: TObject);
begin
  Editar := false;
  Bloqueo;
  Pn_EditAdd.Visible := true;
  Pn_EditAdd.BringToFront;

   Ed_Codigo.Enabled := true;
   Ed_Codigo.text := '';
   Ed_Nombre.Text := '';
   Ed_Provincia.Text := '';

end;

procedure TFmCiudades.TB_DeleteClick(Sender: TObject);
var
 IdRubro : String;
begin
 IdRubro :=  Listview1.items[Listview1.ItemIndex].Caption;

 if DialogoBox('¿Confirma borrar la ciudad : '+ Listview1.items[Listview1.ItemIndex].Caption +' ?','Borrar Ciudad', 1,1)  then
  IF CiudadesBorrar(IdRubro) Then
   BEgin
    ListaActiva.Delete(Listview1.ItemIndex);
    Listview1.items.Count := ListaActiva.Count;
   End;

end;

procedure TFmCiudades.TB_editClick(Sender: TObject);
var
  Ciudad : TCiudad;
  i : integer;
begin
   Editar := true;
   Bloqueo;

   Pn_EditAdd.Visible := true;
   Pn_EditAdd.BringToFront;

   Ciudad := TCiudad.create;
   Ciudad.CodPostal :=  Listview1.items[Listview1.ItemIndex].Caption;
   CiudadesLeer(Ciudad);

   Ed_Codigo.Enabled := false;
   Ed_Codigo.text := Ciudad.CodPostal;
   Ed_Nombre.Text := Ciudad.Nombre;
   Ed_provincia.Text := Ciudad.Provincia;

   Ciudad.Free;
end;

end.

